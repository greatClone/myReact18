{"version":3,"file":"bundle.js","sources":["../src/shared/constants.js","../src/react/createElement.js","../src/react/Component.js","../src/react/index.js","../src/reactDom/fiberNode.js","../src/reactDom/workTags.js","../src/reactDom/render.js","../src/reactDom/index.js","../src/index.js"],"sourcesContent":["export const REACT_ELEMENT = Symbol(\"react_element\");\nexport const REACT_TEXT = Symbol(\"react_text\");\n","import { REACT_ELEMENT, REACT_TEXT } from \"../shared/constants\";\n\nfunction toObject(element) {\n  if (typeof element === \"string\" || typeof element === \"number\") {\n    return {\n      content: element,\n      $$typeof: REACT_TEXT,\n    };\n  }\n  return element;\n}\n\nexport default function createElement(type, config, ...children) {\n  let key = null;\n  let ref = null;\n  let props = {};\n\n  // key/ref\n  if (config) {\n    key = config.key || null;\n    ref = config.ref || null;\n    Reflect.deleteProperty(config, key);\n    Reflect.deleteProperty(config, ref);\n    // props,\n    props = config;\n  }\n  if (children.length > 0) {\n    props.children = children.map((child) => toObject(child));\n  }\n  // children\n\n  return {\n    type,\n    key,\n    ref,\n    props,\n    $$typeof: REACT_ELEMENT,\n  };\n}\n","export default class Component {\n  constructor(props, context, updater) {\n    this.props = props;\n    this.constext = {};\n    this.refs = {};\n    this.updater = null;\n  }\n\n  static isReactComponent = true;\n\n  setState(partialState) {\n    this.updater.enqueueSetState(this, partialState);\n  }\n}\n","import createElement from \"./createElement\";\nimport Component from \"./Component\";\n\nexport default {\n  createElement: createElement,\n  Component: Component,\n};\n","class FiberNode {\n  constructor(tag) {\n    this.tag = tag;\n\n    // 链表关系\n    this.return = null;\n    this.sibling = null;\n    this.child = null;\n\n    // 更新队列\n    this.updateQueue = null;\n\n    this.alternate = null;\n  }\n}\n\nexport default FiberNode;\n","export const HostRoot = 3;\n","import FiberNode from \"./fiberNode\";\nimport { HostRoot } from \"./workTags\";\n\nlet workInProgress = {};\n\nfunction performUnitOfWork(unitOfWork) {}\n\nfunction renderRootSync(root) {\n  root.finishedWork = null;\n  workInProgress = root.current;\n  workInProgress.alternate = root.current;\n  root.current.alternate = workInProgress;\n\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction updateContainer(element, root) {\n  // 生成更新对象\n  const update = {\n    payload: element,\n    next: null,\n  };\n  // 入队更新\n  update.next = update;\n  const fiberNode = root.current;\n  fiberNode.updateQueue.shared.interleaved = update;\n\n  // 同步渲染\n  renderRootSync(root);\n  root.finishedWork = root.current.alternate;\n}\n\nexport default function render(element, container) {\n  console.log(111, element, container);\n  // 生成root\n  const rootFiber = new FiberNode(HostRoot);\n  rootFiber.updateQueue = {\n    shared: {\n      pending: null,\n      interleaved: null,\n    },\n  };\n  const root = {\n    containerInfo: container,\n    current: rootFiber,\n  };\n  rootFiber.stateNode = root;\n  container._reactContainer = root;\n\n  // 更新\n  updateContainer(element, root);\n}\n","import render from \"./render\";\n\nexport default {\n  render: render,\n};\n","import React from \"./react\";\nimport ReactDOM from \"./reactDom\";\n\nconst element = <div>hello world</div>;\n\nReactDOM.render(element, document.getElementById(\"root\"));\n"],"names":["REACT_ELEMENT","Symbol","REACT_TEXT","toObject","element","content","$$typeof","createElement","type","config","children","key","ref","props","Reflect","deleteProperty","length","map","child","Component","constructor","context","updater","constext","refs","isReactComponent","setState","partialState","enqueueSetState","FiberNode","tag","return","sibling","updateQueue","alternate","HostRoot","workInProgress","renderRootSync","root","finishedWork","current","updateContainer","update","payload","next","fiberNode","shared","interleaved","render","container","console","log","rootFiber","pending","containerInfo","stateNode","_reactContainer","ReactDOM","document","getElementById"],"mappings":"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"}